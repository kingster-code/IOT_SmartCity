@page "/dadosroubo"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts
@using IOT_Data.Models
@using Monitor_Business.DTO
@inject NavigationManager NavigationManager
@inject IZoneBusiness funcoes
@using Monitor_Business.interfaces

<div class="control-section">
    <SfAccumulationChart Title="Número de furtos por zona" Theme="@Theme">
        <AccumulationChartLegendSettings Visible="true" Position="LegendPosition.Top">
        </AccumulationChartLegendSettings>
        <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
        <AccumulationChartSeriesCollection>
            <AccumulationChartSeries DataSource="@data" XName="ZonaName" YName="NumberSteels" Radius="70%" InnerRadius="40%" Name="Project" Explode="true" ExplodeOffset="10%" ExplodeIndex="3">
                <AccumulationDataLabelSettings Visible="true" Name="DataLabelMappingName">
                    <AccumulationChartDataLabelFont FontWeight="600" Color="white"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>
        </AccumulationChartSeriesCollection>
    </SfAccumulationChart>
</div>
@code {
    private Theme Theme { get; set; }
    SfChart Chart;
    private List<RoberyDTO> data = new List<RoberyDTO>();

    protected override async Task OnInitializedAsync()
    {
        List<VehicleRoberyData> dados = new List<VehicleRoberyData>();
        List<Zone> zonas = new List<Zone>();
        Zone zona = new Zone { Name = "covilha", ZoneId = 1 };
        Zone zona2 = new Zone { Name = "lisboa", ZoneId = 2 };
        Zone zona3 = new Zone { Name = "porto", ZoneId = 3 };
        var type = new Vehicle { VehicleId = 1, Operational = true };
        var type2 = new Vehicle { VehicleId = 2, Operational = true };
        var type3 = new Vehicle { VehicleId = 3, Operational = true };
        VehicleRoberyData s = new VehicleRoberyData { Zone = zona, Date = new DateTime(2020, 05, 02), VehicleRoberyId = 1, Resolved = true, Vehicle = type };
        VehicleRoberyData s2 = new VehicleRoberyData { Zone = zona, Date = new DateTime(2021, 05, 02), VehicleRoberyId = 2, Resolved = true, Vehicle = type2 };
        VehicleRoberyData s3 = new VehicleRoberyData { Zone = zona2, Date = new DateTime(2019, 05, 02), VehicleRoberyId = 3, Resolved = true, Vehicle = type };
        VehicleRoberyData s4 = new VehicleRoberyData { Zone = zona3, Date = new DateTime(2020, 05, 02), VehicleRoberyId = 4, Resolved = true, Vehicle = type };
        VehicleRoberyData s5 = new VehicleRoberyData { Zone = zona3, Date = new DateTime(2020, 05, 02), VehicleRoberyId = 5, Resolved = true, Vehicle = type };
        VehicleRoberyData s6 = new VehicleRoberyData { Zone = zona3, Date = new DateTime(2020, 05, 02), VehicleRoberyId = 6, Resolved = true, Vehicle = type3 };

        dados.Add(s);
        dados.Add(s2);
        dados.Add(s3);
        dados.Add(s4);
        dados.Add(s5);
        dados.Add(s6);
        zonas.Add(zona);
        zonas.Add(zona2);
        zonas.Add(zona3);
        data = zonas.Select(item => new RoberyDTO
        {
            ZonaName = item.Name,
            NumberSteels = dados.Where(x => x.Zone.ZoneId == item.ZoneId).Count(),
        }).ToList();



        //data = funcoes.GetZoneNumberRobery().ToList();
    }

}
